version: "3"
services:
  db2:
    image: mysql:8.0.33
    # The lumen library seems to use an older mysql client which is not able to connect if mysql uses the newer caching_sha2_password authentication plugin.
    # Therefore we need to override the mysql starting command to set a config option to use the older password authentication plugin.
    # We need to call the entrypoint script manually because that one will also initialize the database, if one doesn't already exist.
    command: bash -c "chmod -R 0777 /var/www/html/storage/logs && exec bash ./entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"
    volumes:
      - dbdata:/var/lib/mysql
      - ./data/mysql_conf:/etc/mysql/conf.d
      - ./logs/mysql:/var/www/html/storage/logs
    environment:
      # Note: the config only seems to be updated when the container is initially created.
      # If the db config needs to be changed then the db image and volume needs to be destroyed first.
      MYSQL_DATABASE: "${MYSQL_DB}"
      MYSQL_ROOT_HOST: "db2"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASS}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    networks:
      - makeradmin

  api:
    image: makeradmin/api:1.0
    build:
      context: ./api
    volumes:
      - ./logs/api:/work/logs
    depends_on:
      - db2
    networks:
      - makeradmin
    environment:
      MYSQL_HOST: db2
      MYSQL_DB:
      MYSQL_PORT:
      MYSQL_USER:
      MYSQL_PASS:
      ELKS46_API_USER:
      ELKS46_API_KEY:
      HOST_PUBLIC:
      HOST_FRONTEND:
      VIRTUAL_HOST: "${HOST_BACKEND}"
      LETSENCRYPT_HOST: "${HOST_BACKEND}"
      LETSENCRYPT_EMAIL: "${ADMIN_EMAIL}"
      STRIPE_PRIVATE_KEY:
      STRIPE_PUBLIC_KEY:
      STRIPE_SIGNING_SECRET:
      STRIPE_CURRENCY:
      ADMIN_EMAIL:
      CORS_ALLOWED_ORIGINS:
      ACCESSY_CLIENT_ID:
      ACCESSY_CLIENT_SECRET:
      ACCESSY_LABACCESS_GROUP:
      ACCESSY_SPECIAL_LABACCESS_GROUP:
      ACCESSY_DO_MODIFY:

  email-dispatcher:
    image: makeradmin/api:1.0
    build:
      context: ./api
    command: 
      - "/work/dispatch_emails.sh"
    environment:
      MYSQL_HOST: db2
      MYSQL_DB:
      MYSQL_PORT:
      MYSQL_USER:
      MYSQL_PASS:
      MAILGUN_DOMAIN:
      MAILGUN_KEY:
      MAILGUN_FROM:
      MAILGUN_TO_OVERRIDE:
      HOST_PUBLIC:
      HOST_FRONTEND:
    depends_on:
      - api
    networks:
      - makeradmin

  accessy-syncer:
    image: makeradmin/api:1.0
    build:
      context: ./api
    command: 
      - "/work/accessy_syncer.sh"
    environment:
      MYSQL_HOST: db2
      MYSQL_DB:
      MYSQL_PORT:
      MYSQL_USER:
      MYSQL_PASS:
      MAILGUN_DOMAIN:
      MAILGUN_KEY:
      MAILGUN_FROM:
      MAILGUN_TO_OVERRIDE:
      HOST_PUBLIC:
      HOST_FRONTEND:
      ACCESSY_CLIENT_ID:
      ACCESSY_CLIENT_SECRET:
      ACCESSY_LABACCESS_GROUP:
      ACCESSY_SPECIAL_LABACCESS_GROUP:
      ACCESSY_DO_MODIFY:
    depends_on:
      - api
    networks:
      - makeradmin

      
  public:
    image: makeradmin/public:1.0
    volumes:
      - "./.webshop_product_images:/work/static/product_images"
    build:
      context: ./public
    environment:
      APIGATEWAY: "api"
      HOST_BACKEND:
      HOST_PUBLIC:
      STRIPE_PUBLIC_KEY:
      VIRTUAL_HOST: "${HOST_PUBLIC}"
      LETSENCRYPT_HOST: "${HOST_PUBLIC}"
      LETSENCRYPT_EMAIL: "${ADMIN_EMAIL}"
    networks:
      - makeradmin

  admin:
    image: makeradmin/admin:1.0
    build:
      context: ./admin
    environment:
      HOST_BACKEND:
      VIRTUAL_HOST: "${HOST_FRONTEND}"
      LETSENCRYPT_HOST: "${HOST_FRONTEND}"
      LETSENCRYPT_EMAIL: "${ADMIN_EMAIL}"
    networks:
      - makeradmin

networks:
  makeradmin:
volumes:
  dbdata:
