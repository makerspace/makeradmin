services:
  db2:
    image: mysql:9.4.0-oraclelinux9@sha256:439bfb4044dc59ade76c4e5c4065c02e5ba4d4007db32c40ac58d55c03069916
    command: --log_error_verbosity=2 # errors and warnings
    volumes:
      - dbdata:/var/lib/mysql
      - ./data/mysql_conf:/etc/mysql/conf.d
      - ./logs/mysql:/var/www/html/storage/logs
    environment:
      # Note: the config is only updated when the container is initially created.
      # If the db config needs to be changed then the db volume needs to be destroyed first.
      MYSQL_DATABASE: "${MYSQL_DB}"
      MYSQL_ROOT_HOST: "db2"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASS}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    networks:
      - makeradmin

  api:
    image: makeradmin/api:1.0
    build:
      context: ./api
    volumes:
      - ./logs/api:/work/logs
      - ./data/licenses:/work/data/licenses
    depends_on:
      - db2
      - redis
    networks:
      - makeradmin
    environment:
      MYSQL_HOST: db2
      MYSQL_DB:
      MYSQL_PORT:
      MYSQL_USER:
      MYSQL_PASS:
      ELKS46_API_USER:
      ELKS46_API_KEY:
      HOST_PUBLIC: "${PROTOCOL}://${HOST_PUBLIC}"
      HOST_FRONTEND: "${PROTOCOL}://${HOST_FRONTEND}"
      HOST_BACKEND: "${PROTOCOL}://${HOST_BACKEND}"
      VIRTUAL_HOST: "${HOST_BACKEND}"
      LETSENCRYPT_HOST: "${HOST_BACKEND}"
      LETSENCRYPT_EMAIL: "${ADMIN_EMAIL}"
      STRIPE_PRIVATE_KEY:
      STRIPE_PUBLIC_KEY:
      STRIPE_SIGNING_SECRET:
      STRIPE_CURRENCY:
      ADMIN_EMAIL:
      CORS_ALLOWED_ORIGINS: "${PROTOCOL}://${HOST_FRONTEND},${PROTOCOL}://${HOST_PUBLIC},${PROTOCOL}://${HOST_BACKEND}"
      ACCESSY_CLIENT_ID:
      ACCESSY_CLIENT_SECRET:
      ACCESSY_LABACCESS_GROUP:
      ACCESSY_SPECIAL_LABACCESS_GROUP:
      ACCESSY_DO_MODIFY:
      FIRSTRUN_AUTO_ADMIN_FIRSTNAME:
      FIRSTRUN_AUTO_ADMIN_LASTNAME:
      FIRSTRUN_AUTO_ADMIN_EMAIL:
      FIRSTRUN_AUTO_ADMIN_PASSWORD:
      MAKERSPACE_LOCAL_TIMEZONE:
  redis:
    # Use redis as a cross-worker cache
    # This instance does NOT persist any data if the container is rebuilt.
    # Actually persistent data should be stored in the database.
    # This is used for things like accessy session keys and various accessy caches (cause accessy is slooow)
    image: redis:alpine@sha256:987c376c727652f99625c7d205a1cba3cb2c53b92b0b62aade2bd48ee1593232
    command:
      - "--loglevel warning"
    networks:
      - makeradmin
  email-dispatcher:
    image: makeradmin/api:1.0
    build:
      context: ./api
    volumes:
      - ./logs/email_dispatcher:/work/logs
    command:
      - "/work/dispatch_emails.sh"
    environment:
      MYSQL_HOST: db2
      MYSQL_DB:
      MYSQL_PORT:
      MYSQL_USER:
      MYSQL_PASS:
      MAILGUN_DOMAIN:
      MAILGUN_KEY:
      MAILGUN_FROM:
      MAILGUN_TO_OVERRIDE:
      ELKS46_API_USER:
      ELKS46_API_KEY:
      HOST_PUBLIC: "${PROTOCOL}://${HOST_PUBLIC}"
      HOST_FRONTEND: "${PROTOCOL}://${HOST_FRONTEND}"
      HOST_BACKEND: "${PROTOCOL}://${HOST_BACKEND}"
    depends_on:
      - api
    networks:
      - makeradmin

  accessy-syncer:
    image: makeradmin/api:1.0
    build:
      context: ./api
    volumes:
      - ./logs/accessy_syncer:/work/logs
    command:
      - "/work/accessy_syncer.sh"
    environment:
      MYSQL_HOST: db2
      MYSQL_DB:
      MYSQL_PORT:
      MYSQL_USER:
      MYSQL_PASS:
      MAILGUN_DOMAIN:
      MAILGUN_KEY:
      MAILGUN_FROM:
      MAILGUN_TO_OVERRIDE:
      HOST_PUBLIC: "${PROTOCOL}://${HOST_PUBLIC}"
      HOST_FRONTEND: "${PROTOCOL}://${HOST_FRONTEND}"
      ACCESSY_CLIENT_ID:
      ACCESSY_CLIENT_SECRET:
      ACCESSY_LABACCESS_GROUP:
      ACCESSY_SPECIAL_LABACCESS_GROUP:
      ACCESSY_DO_MODIFY:
    depends_on:
      - api
    networks:
      - makeradmin

  public:
    image: makeradmin/public:1.0
    volumes:
      - "./.webshop_product_images:/work/static/product_images"
    build:
      context: ./public
      additional_contexts:
        frontend_common: ./frontend_common
    environment:
      APIGATEWAY: "api"
      HOST_BACKEND: "${PROTOCOL}://${HOST_BACKEND}"
      HOST_PUBLIC: "${PROTOCOL}://${HOST_PUBLIC}"
      HOST_FRONTEND: "${PROTOCOL}://${HOST_FRONTEND}"
      STRIPE_PUBLIC_KEY:
      VIRTUAL_HOST: "${HOST_PUBLIC}"
      LETSENCRYPT_HOST: "${HOST_PUBLIC}"
      LETSENCRYPT_EMAIL: "${ADMIN_EMAIL}"
    networks:
      - makeradmin

  admin:
    image: makeradmin/admin:1.0
    build:
      context: ./admin
      additional_contexts:
        frontend_common: ./frontend_common
    environment:
      HOST_BACKEND: "${PROTOCOL}://${HOST_BACKEND}"
      VIRTUAL_HOST: "${HOST_FRONTEND}"
      LETSENCRYPT_HOST: "${HOST_FRONTEND}"
      LETSENCRYPT_EMAIL: "${ADMIN_EMAIL}"
    networks:
      - makeradmin

networks:
  makeradmin:
volumes:
  dbdata:
